<?xml version="1.0"?>

<launch>

    <arg name="use_sim" default="false" />

    <arg name="use_apriltags" default="false" />

    <arg name="global_gui" default="true" />

    <arg name="robot_id" default="left" />  <!-- "left", "right", "both" -->

    
    <arg name="left_robot" value="true" unless="$(eval arg('robot_id')=='right')"/>
    <arg name="left_robot" value="false" if="$(eval arg('robot_id')=='right')"/>

    <arg name="right_robot" value="true" unless="$(eval arg('robot_id')=='left')"/>
    <arg name="right_robot" value="false" if="$(eval arg('robot_id')=='left')"/>

    <!-- <arg name="host_ip"  default="10.0.1.3"/>
    <arg name="robot_ip"  default="10.0.1.1"/>
    <arg name="reverse_port"  default="8081"/> -->

    <param name="robot_description" command="$(find xacro)/xacro '$(find main_program)/urdf/bi_ur5_rs_platform.xacro' left_robot:=$(arg left_robot) right_robot:=$(arg right_robot)" />
    <node name="rviz" pkg="rviz" type="rviz" respawn="false" args="-d $(find main_program)/rviz/bi_ur5_rs_platform.rviz" output="screen" required="false"/>

    
    <group if="$(arg use_apriltags)">

        <include file="$(find main_program)/launch/apriltag_detector.launch" />
  
      </group>
  
      <include file="$(find realsense2_camera)/launch/rs_camera.launch">
          <arg name="camera" value="rs2" /> <!-- This will be the prefix of the published image and tags header -->
          <arg name="enable_depth" value="true" />
          <arg name="align_depth" value="false" />
          <arg name="enable_sync" value="false" />
          <arg name="publish_tf" value="false"/>
          <arg name="enable_pointcloud" value="true" />
          <!-- <arg name="color_width" value="640"/>
          <arg name="color_height" value="480"/>
          <arg name="color_fps" value="30"/> -->
      </include>


    <!-- launch-prefix="xterm -fa monaco -fs 13 -e gdb -args" -->
    <node pkg="main_program" type="main_program" name="right_robot_ctr_node"
          output="screen" required="true" unless="$(eval arg('robot_id')=='left')">

        <param name="use_sim" value="$(arg use_sim)"/>

        <param name="host_ip" type="string" value="10.0.0.3" />
        <param name="robot_ip" type="string" value="10.0.0.1" />
        <param name="reverse_port" type="int" value="8080" />

        <rosparam>

            robot_type: "ur"
            robot_description_name: "/robot_description"
            base_link: "robotic_platform_base_link"
            tool_link: "ee_link"
            Fext_dead_zone: [1.0, 1.0, 1.0,  0.2, 0.2, 0.2]

            ctrl_cycle: 0.002
            limits_check: false

            q_start: [0.164, -1.68, -2.09, -2.53, -1.25, 1.81]

            admittance_controller: true
            train_controller: true
            # gmp_mpc_controller: true

        </rosparam>

    </node>

    <node pkg="main_program" type="main_program" name="left_robot_ctr_node"
          output="screen" required="true" unless="$(eval arg('robot_id')=='right')">

        <param name="use_sim" value="$(arg use_sim)"/>

        <param name="host_ip" type="string" value="10.0.1.3" />
        <param name="robot_ip" type="string" value="10.0.1.1" />
        <param name="reverse_port" type="int" value="8081" />

        <rosparam>

            robot_type: "ur"
            robot_description_name: "/robot_description"
            base_link: "robotic_platform_base_link"
            tool_link: "rs2_color_optical_frame"
            Fext_dead_zone: [1.0, 1.0, 1.0,  0.2, 0.2, 0.2]

            ctrl_cycle: 0.002
            limits_check: false

            q_start: [-2.72, -2.3, -2.39, 0.966, 0.992, 1.1]

            admittance_controller: true

        </rosparam>

    </node>

    <group if="$(eval arg('robot_id')=='both' and arg('global_gui'))">
      <node pkg="global_gui" type="global_gui" name="global_gui"
            output="screen" cwd="node" required="true"/>
    </group>
    

</launch>
